{"version":3,"sources":["webpack://ThickLine/webpack/universalModuleDefinition","webpack://ThickLine/./src/ThickLineSegments.ts","webpack://ThickLine/./src/ThickLine.ts","webpack://ThickLine/./src/ThickLineSegmentsGeometry.ts","webpack://ThickLine/./src/ThickLineGeometry.ts","webpack://ThickLine/./src/ThickLineMaterial.ts","webpack://ThickLine/external {\"root\":\"THREE\",\"amd\":\"three\",\"commonjs\":\"three\",\"commonjs2\":\"three\"}","webpack://ThickLine/webpack/bootstrap","webpack://ThickLine/webpack/startup","webpack://ThickLine/webpack/runtime/define property getters","webpack://ThickLine/webpack/runtime/hasOwnProperty shorthand","webpack://ThickLine/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__815__","WORK_START3","Vector3","WORK_END3","WORK_START4","Vector4","WORK_END4","ssOrigin","ssOrigin3","mvMatrix","Matrix4","line","Line3","closestPoint","geometry","material","type","computeLineDistances","this","attributes","aInstanceStart","aInstanceEnd","count","data","lineDistances","Float32Array","i","j","l","fromBufferAttribute","distanceTo","instanceDistanceBuffer","InstancedInterleavedBuffer","setAttribute","InterleavedBufferAttribute","raycast","raycaster","intersects","camera","console","error","threshold","undefined","params","Line","ray","projectionMatrix","resolution","lineWidth","near","at","w","applyMatrix4","matrixWorldInverse","multiplyScalar","x","y","z","copy","matrixWorld","multiplyMatrices","deltaDist","t","lerp","start","end","param","closestPointToPointParameter","zPos","MathUtils","isInClipSpace","isInside","pointOnLine","point","distanceSqToSegment","push","distance","origin","object","face","faceIndex","uv2","Mesh","ThickLine","ThickLineSegments","POSITIONS","UVS","INDEX","WORK_VEC3","WORK_BOX3","Box3","setIndex","Float32BufferAttribute","setColors","array","colors","instanceColorBuffer","setPositions","lineSegments","instanceBuffer","segCount","length","segmentIndexBuffer","InstancedBufferAttribute","computeBoundingBox","computeBoundingSphere","applyMatrix","matrix","instanceStart","instanceEnd","needsUpdate","boundingBox","boundingSphere","Sphere","center","getCenter","maxRadiusSq","il","Math","max","distanceToSquared","radius","sqrt","isNaN","setFromBufferAttribute","union","fromWireframeGeometry","position","fromEdgesGeometry","fromMesh","mesh","WireframeGeometry","fromLineSegments","InstancedBufferGeometry","points","fromLine","BufferGeometry","ThickLineSegmentsGeometry","DEFAULT_UNIFORMS","UniformsUtils","UniformsLib","uLinewidth","value","uResolution","Vector2","uDashScale","uDashSize","uDashOffset","uGapSize","parameters","vertexShader","fragmentShader","uniforms","clipping","dashed","_customChunks","_customUniforms","_chunkReplacer","_match","chunkName","_parseChunks","setValues","onBeforeCompile","shader","opacity","diffuse","setUniforms","unsetUniforms","setChunk","chunk","ThickLineMaterial","CustomChunks","unsetChunk","clearChunks","replace","cLocalSpace","cViewSpace","cProjectedSpace","cVertexGlobal","cVertexStart","cVertexEnd","cColor","cFragmentGlobal","cFragmentStart","cFragmentEnd","CustomChunkNames","Object","keys","ShaderMaterial","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag"],"mappings":"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","file":"bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"three\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"three\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ThickLine\"] = factory(require(\"three\"));\n\telse\n\t\troot[\"ThickLine\"] = factory(root[\"THREE\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__815__) {\nreturn ","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  BufferAttribute,\n  InstancedInterleavedBuffer,\n  InterleavedBufferAttribute,\n  Intersection,\n  Line3,\n  MathUtils,\n  Matrix4,\n  Mesh,\n  Raycaster,\n  Vector3,\n  Vector4,\n} from 'three'\nimport { ThickLineMaterial } from './ThickLineMaterial'\nimport { ThickLineSegmentsGeometry } from './ThickLineSegmentsGeometry'\n\nconst WORK_START3 = new Vector3()\nconst WORK_END3 = new Vector3()\n\nconst WORK_START4 = new Vector4()\nconst WORK_END4 = new Vector4()\n\nconst ssOrigin = new Vector4()\nconst ssOrigin3 = new Vector3()\nconst mvMatrix = new Matrix4()\nconst line = new Line3()\nconst closestPoint = new Vector3()\n\nexport interface IThickLineIntersects extends Intersection {\n  pointOnLine: Vector3\n  uv2: null\n}\nexport class ThickLineSegments extends Mesh {\n  type = 'ThickLineSegments'\n  constructor(geometry: ThickLineSegmentsGeometry, material: ThickLineMaterial) {\n    super(geometry, material)\n  }\n\n  public computeLineDistances(): this {\n    const { geometry } = this\n\n    const { aInstanceStart, aInstanceEnd } = geometry.attributes\n    const count = (aInstanceStart as InterleavedBufferAttribute).data.count\n    const lineDistances = new Float32Array(2 * count)\n\n    for (let i = 0, j = 0, l = count; i < l; i++, j += 2) {\n      WORK_START3.fromBufferAttribute(aInstanceStart as BufferAttribute, i)\n      WORK_END3.fromBufferAttribute(aInstanceEnd as BufferAttribute, i)\n\n      lineDistances[j] = j === 0 ? 0 : lineDistances[j - 1]\n      lineDistances[j + 1] = lineDistances[j] + WORK_START3.distanceTo(WORK_END3)\n    }\n\n    const instanceDistanceBuffer = new InstancedInterleavedBuffer(lineDistances, 2, 1) // d0, d1\n\n    geometry.setAttribute('aInstanceDistanceStart', new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 0)) // d0\n    geometry.setAttribute('aInstanceDistanceEnd', new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 1)) // d1\n\n    return this\n  }\n\n  public raycast(raycaster: Raycaster, intersects: IThickLineIntersects[]): void {\n    if (raycaster.camera === null)\n      console.error('LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.')\n\n    const threshold = raycaster.params.Line !== undefined ? raycaster.params.Line.threshold || 0 : 0\n\n    const { ray, camera } = raycaster\n    const { projectionMatrix } = camera\n\n    const { geometry, material } = this\n    const { resolution, linewidth } = material as ThickLineMaterial\n    const lineWidth = linewidth + threshold\n\n    const { aInstanceStart, aInstanceEnd } = geometry.attributes\n\n    // camera forward is negative\n    const near = -(camera as any).near\n\n    // pick a point 1 unit out along the ray to avoid the ray origin\n    // sitting at the camera origin which will cause \"w\" to be 0 when\n    // applying the projection matrix.\n    ray.at(1, ssOrigin as any)\n\n    // ndc space [ - 1.0, 1.0 ]\n    ssOrigin.w = 1\n    ssOrigin.applyMatrix4(camera.matrixWorldInverse)\n    ssOrigin.applyMatrix4(projectionMatrix)\n    ssOrigin.multiplyScalar(1 / ssOrigin.w)\n\n    // screen space\n    ssOrigin.x *= resolution.x / 2\n    ssOrigin.y *= resolution.y / 2\n    ssOrigin.z = 0\n\n    ssOrigin3.copy(ssOrigin as any)\n\n    const matrixWorld = this.matrixWorld\n    mvMatrix.multiplyMatrices(camera.matrixWorldInverse, matrixWorld)\n\n    for (let i = 0, l = aInstanceStart.count; i < l; i++) {\n      WORK_START4.fromBufferAttribute(aInstanceStart as BufferAttribute, i)\n      WORK_END4.fromBufferAttribute(aInstanceEnd as BufferAttribute, i)\n\n      WORK_START4.w = 1\n      WORK_END4.w = 1\n\n      // camera space\n      WORK_START4.applyMatrix4(mvMatrix)\n      WORK_END4.applyMatrix4(mvMatrix)\n\n      // skip the segment if it's entirely behind the camera\n      const isBehindCameraNear = WORK_START4.z > near && WORK_END4.z > near\n      if (isBehindCameraNear) {\n        continue\n      }\n\n      // trim the segment if it extends behind camera near\n      if (WORK_START4.z > near) {\n        const deltaDist = WORK_START4.z - WORK_END4.z\n        const t = (WORK_START4.z - near) / deltaDist\n        WORK_START4.lerp(WORK_END4, t)\n      } else if (WORK_END4.z > near) {\n        const deltaDist = WORK_END4.z - WORK_START4.z\n        const t = (WORK_END4.z - near) / deltaDist\n        WORK_END4.lerp(WORK_START4, t)\n      }\n\n      // clip space\n      WORK_START4.applyMatrix4(projectionMatrix)\n      WORK_END4.applyMatrix4(projectionMatrix)\n\n      // ndc space [ - 1.0, 1.0 ]\n      WORK_START4.multiplyScalar(1 / WORK_START4.w)\n      WORK_END4.multiplyScalar(1 / WORK_END4.w)\n\n      // screen space\n      WORK_START4.x *= resolution.x / 2\n      WORK_START4.y *= resolution.y / 2\n\n      WORK_END4.x *= resolution.x / 2\n      WORK_END4.y *= resolution.y / 2\n\n      // create 2d segment\n      line.start.copy(WORK_START4 as any)\n      line.start.z = 0\n\n      line.end.copy(WORK_END4 as any)\n      line.end.z = 0\n\n      // get closest point on ray to segment\n      const param = line.closestPointToPointParameter(ssOrigin3, true)\n      line.at(param, closestPoint)\n\n      // check if the intersection point is within clip space\n      const zPos = MathUtils.lerp(WORK_START4.z, WORK_END4.z, param)\n      const isInClipSpace = zPos >= -1 && zPos <= 1\n\n      const isInside = ssOrigin3.distanceTo(closestPoint) < lineWidth * 0.5\n\n      if (isInClipSpace && isInside) {\n        line.start.fromBufferAttribute(aInstanceStart, i)\n        line.end.fromBufferAttribute(aInstanceEnd, i)\n\n        line.start.applyMatrix4(matrixWorld)\n        line.end.applyMatrix4(matrixWorld)\n\n        const pointOnLine = new Vector3()\n        const point = new Vector3()\n\n        ray.distanceSqToSegment(line.start, line.end, point, pointOnLine)\n\n        intersects.push({\n          point,\n          pointOnLine,\n          distance: ray.origin.distanceTo(point),\n\n          object: this,\n          face: null,\n          faceIndex: i,\n          uv2: null,\n        })\n      }\n    }\n  }\n}\n","import { ThickLineSegments } from './ThickLineSegments'\n\nexport class ThickLine extends ThickLineSegments {\n  type = 'ThickLine'\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  Box3,\n  BufferAttribute,\n  BufferGeometry,\n  Float32BufferAttribute,\n  InstancedBufferAttribute,\n  InstancedBufferGeometry,\n  InstancedInterleavedBuffer,\n  InterleavedBufferAttribute,\n  LineSegments,\n  Matrix4,\n  Mesh,\n  Sphere,\n  Vector3,\n  WireframeGeometry,\n} from 'three'\n\nconst POSITIONS = [-1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1, -1, 0]\nconst UVS = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2]\nconst INDEX = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5]\nconst WORK_VEC3 = new Vector3()\nconst WORK_BOX3 = new Box3()\nconst NAN_ERROR =\n  'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.'\n\nexport class ThickLineSegmentsGeometry extends InstancedBufferGeometry {\n  type = 'ThickLineSegmentsGeometry'\n\n  constructor() {\n    super()\n    this.setIndex(INDEX)\n    this.setAttribute('position', new Float32BufferAttribute(POSITIONS, 3))\n    this.setAttribute('uv', new Float32BufferAttribute(UVS, 2))\n  }\n\n  public setColors(array: Float32Array | ArrayLike<number>): this {\n    const colors = array instanceof Float32Array ? array : new Float32Array(array)\n    const instanceColorBuffer = new InstancedInterleavedBuffer(colors, 6, 1) // rgb, rgb\n\n    this.setAttribute('aInstanceColorStart', new InterleavedBufferAttribute(instanceColorBuffer, 3, 0)) // rgb\n    this.setAttribute('aInstanceColorEnd', new InterleavedBufferAttribute(instanceColorBuffer, 3, 3)) // rgb\n\n    return this\n  }\n\n  public setPositions(array: Float32Array | ArrayLike<number>): this {\n    const lineSegments = array instanceof Float32Array ? array : new Float32Array(array)\n    const instanceBuffer = new InstancedInterleavedBuffer(lineSegments, 6, 1) // xyz, xyz\n    const segCount = array.length / 3\n    const segmentIndexBuffer = new Float32Array(segCount)\n    for (let i = 0; i < segCount; ) segmentIndexBuffer[i] = i++\n\n    this.setAttribute('aInstanceStart', new InterleavedBufferAttribute(instanceBuffer, 3, 0)) // xyz\n    this.setAttribute('aInstanceEnd', new InterleavedBufferAttribute(instanceBuffer, 3, 3)) // xyz\n    this.setAttribute('aInstanceSegmentIndex', new InstancedBufferAttribute(segmentIndexBuffer, 1))\n\n    this.computeBoundingBox()\n    this.computeBoundingSphere()\n\n    return this\n  }\n\n  public applyMatrix(matrix: Matrix4): this {\n    return this.applyMatrix4(matrix)\n  }\n  public applyMatrix4(matrix: Matrix4): this {\n    const start = this.attributes.instanceStart\n    const end = this.attributes.instanceEnd\n\n    if (start !== undefined) {\n      start.applyMatrix4(matrix)\n      end.applyMatrix4(matrix)\n      start.needsUpdate = true\n    }\n\n    if (this.boundingBox !== null) this.computeBoundingBox()\n    if (this.boundingSphere !== null) this.computeBoundingSphere()\n\n    return this\n  }\n  public computeBoundingSphere(): void {\n    if (this.boundingSphere === null) this.boundingSphere = new Sphere()\n    if (this.boundingBox === null) this.computeBoundingBox()\n\n    const start = this.attributes.instanceStart\n    const end = this.attributes.instanceEnd\n\n    if (start !== undefined && end !== undefined) {\n      const { center } = this.boundingSphere\n\n      this.boundingBox!.getCenter(center)\n\n      let maxRadiusSq = 0\n\n      for (let i = 0, il = start.count; i < il; i++) {\n        WORK_VEC3.fromBufferAttribute(start, i)\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(WORK_VEC3))\n\n        WORK_VEC3.fromBufferAttribute(end, i)\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(WORK_VEC3))\n      }\n\n      this.boundingSphere.radius = Math.sqrt(maxRadiusSq)\n\n      if (isNaN(this.boundingSphere.radius)) console.error(NAN_ERROR, this)\n    }\n  }\n  public computeBoundingBox(): void {\n    if (this.boundingBox === null) this.boundingBox = new Box3()\n\n    const start = this.attributes.instanceStart as BufferAttribute\n    const end = this.attributes.instanceEnd as BufferAttribute\n\n    if (start !== undefined && end !== undefined) {\n      this.boundingBox.setFromBufferAttribute(start)\n      WORK_BOX3.setFromBufferAttribute(end)\n      this.boundingBox.union(WORK_BOX3)\n    }\n  }\n\n  public fromWireframeGeometry(geometry: BufferGeometry): this {\n    this.setPositions(geometry.attributes.position.array)\n    return this\n  }\n  public fromEdgesGeometry(geometry: BufferGeometry): this {\n    return this.fromWireframeGeometry(geometry)\n  }\n  public fromMesh(mesh: Mesh): this {\n    this.fromWireframeGeometry(new WireframeGeometry(mesh.geometry))\n    return this\n  }\n  public fromLineSegments(lineSegments: LineSegments): this {\n    return this.fromWireframeGeometry(lineSegments.geometry)\n  }\n}\n","import { BufferGeometry, Line } from 'three'\nimport { ThickLineSegmentsGeometry } from './ThickLineSegmentsGeometry'\n\nexport class ThickLineGeometry extends ThickLineSegmentsGeometry {\n  type = 'ThickLineGeometry'\n  public setPositions(array: ArrayLike<number>): this {\n    const length = array.length - 3\n    const points = new Float32Array(2 * length)\n\n    for (let i = 0; i < length; i += 3) {\n      points[2 * i] = array[i]\n      points[2 * i + 1] = array[i + 1]\n      points[2 * i + 2] = array[i + 2]\n\n      points[2 * i + 3] = array[i + 3]\n      points[2 * i + 4] = array[i + 4]\n      points[2 * i + 5] = array[i + 5]\n    }\n\n    super.setPositions(points)\n\n    return this\n  }\n  public setColors(array: ArrayLike<number>): this {\n    const length = array.length - 3\n    const colors = new Float32Array(2 * length)\n\n    for (let i = 0; i < length; i += 3) {\n      colors[2 * i] = array[i]\n      colors[2 * i + 1] = array[i + 1]\n      colors[2 * i + 2] = array[i + 2]\n\n      colors[2 * i + 3] = array[i + 3]\n      colors[2 * i + 4] = array[i + 4]\n      colors[2 * i + 5] = array[i + 5]\n    }\n\n    super.setColors(colors)\n\n    return this\n  }\n  public fromLine(line: Line): this {\n    const geometry = line.geometry\n\n    if (geometry instanceof BufferGeometry) this.setPositions(geometry.attributes.position.array)\n\n    return this\n  }\n  public copy(): this {\n    //\n    return this\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { Color, MaterialParameters, Shader, ShaderMaterial, UniformsLib, UniformsUtils, Vector2 } from 'three'\nimport vertexShader from './glsl/thickLine.vert'\nimport fragmentShader from './glsl/thickLine.frag'\n\nconst DEFAULT_UNIFORMS = UniformsUtils.merge([\n  UniformsLib.common,\n  UniformsLib.fog,\n  {\n    uLinewidth: { value: 1 },\n    uResolution: { value: new Vector2(1, 1) },\n    uDashScale: { value: 1 },\n    uDashSize: { value: 1 },\n    uDashOffset: { value: 0 },\n    uGapSize: { value: 1 },\n  },\n])\n\ninterface IParameters extends MaterialParameters {\n  color?: string | number | Color\n  resolution?: Vector2\n  linewidth?: number\n  dashed?: boolean\n}\n\nexport class ThickLineMaterial extends ShaderMaterial {\n  private static readonly CustomChunks: Record<string, boolean> = {\n    cLocalSpace: true,\n    cViewSpace: true,\n    cProjectedSpace: true,\n    cVertexGlobal: true,\n    cVertexStart: true,\n    cVertexEnd: true,\n    cColor: true,\n    cFragmentGlobal: true,\n    cFragmentStart: true,\n    cFragmentEnd: true,\n  }\n  public static readonly CustomChunkNames: string[] = Object.keys(ThickLineMaterial.CustomChunks)\n\n  public type = 'ThickLineMaterial'\n  public dashed = false\n\n  private _customChunks: Record<string, string> = {}\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _customUniforms: Record<string, { value: any }> = {}\n\n  constructor(parameters: IParameters) {\n    super({\n      vertexShader,\n      fragmentShader,\n      uniforms: UniformsUtils.clone(DEFAULT_UNIFORMS),\n      clipping: true,\n    })\n\n    this.setValues(parameters)\n\n    this.onBeforeCompile = (shader: Shader) => {\n      shader.uniforms = { ...shader.uniforms, ...this._customUniforms }\n      shader.vertexShader = this._parseChunks(shader.vertexShader)\n      shader.fragmentShader = this._parseChunks(shader.fragmentShader)\n    }\n  }\n\n  get resolution(): Vector2 {\n    return this.uniforms.uResolution.value\n  }\n  set resolution(value: Vector2) {\n    this.uniforms.uResolution.value = value\n  }\n\n  //@ts-ignore\n  get opacity(): number {\n    return this.uniforms.opacity.value\n  }\n  set opacity(value: number) {\n    if (this.uniforms) this.uniforms.opacity.value = value\n  }\n\n  get gapSize(): number {\n    return this.uniforms.uGapSize.value\n  }\n  set gapSize(value: number) {\n    this.uniforms.uGapSize.value = value\n  }\n\n  get dashOffset(): number {\n    return this.uniforms.uDashOffset.value\n  }\n  set dashOffset(value: number) {\n    this.uniforms.uDashOffset.value = value\n  }\n\n  get dashSize(): number {\n    return this.uniforms.uDashSize.value\n  }\n  set dashSize(value: number) {\n    this.uniforms.uDashSize.value = value\n  }\n\n  get dashScale(): number {\n    return this.uniforms.uDashScale.value\n  }\n  set dashScale(value: number) {\n    this.uniforms.uDashScale.value = value\n  }\n\n  //@ts-ignore\n  get linewidth(): number {\n    return this.uniforms.uLinewidth.value\n  }\n  set linewidth(value: number) {\n    if (this.uniforms && this.uniforms.uLinewidth) this.uniforms.uLinewidth.value = value\n  }\n\n  get color(): Color {\n    return this.uniforms.diffuse.value\n  }\n  set color(value: Color) {\n    this.uniforms.diffuse.value = value\n  }\n\n  public setUniforms(uniforms: Record<string, { value: any }>): void {\n    this._customUniforms = uniforms\n    this.needsUpdate = true\n  }\n  public unsetUniforms(): void {\n    this._customUniforms = {}\n    this.needsUpdate = true\n  }\n  public setChunk(chunkName: string, chunk: string): void {\n    if (!ThickLineMaterial.CustomChunks[chunkName]) return\n    this._customChunks[chunkName] = chunk\n    this.needsUpdate = true\n  }\n  public unsetChunk(chunkName: string): void {\n    if (!ThickLineMaterial.CustomChunks[chunkName]) return\n    delete this._customChunks[chunkName]\n    this.needsUpdate = true\n  }\n  public clearChunks(): void {\n    this._customChunks = {}\n    this.needsUpdate = true\n  }\n\n  private _chunkReplacer = (_match: string, chunkName: string) => {\n    return this._parseChunks(this._customChunks[chunkName] ?? '')\n  }\n  private _parseChunks(shader: string): string {\n    const chunkPattern = /%- ([\\w\\d/]+) -%/gm\n    return shader.replace(chunkPattern, this._chunkReplacer)\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__815__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(986);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}