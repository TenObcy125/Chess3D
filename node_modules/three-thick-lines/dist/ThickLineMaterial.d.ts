import { Color, MaterialParameters, ShaderMaterial, Vector2 } from 'three';
interface IParameters extends MaterialParameters {
    color?: string | number | Color;
    resolution?: Vector2;
    linewidth?: number;
    dashed?: boolean;
}
export declare class ThickLineMaterial extends ShaderMaterial {
    private static readonly CustomChunks;
    static readonly CustomChunkNames: string[];
    type: string;
    dashed: boolean;
    private _customChunks;
    private _customUniforms;
    constructor(parameters: IParameters);
    get resolution(): Vector2;
    set resolution(value: Vector2);
    get opacity(): number;
    set opacity(value: number);
    get gapSize(): number;
    set gapSize(value: number);
    get dashOffset(): number;
    set dashOffset(value: number);
    get dashSize(): number;
    set dashSize(value: number);
    get dashScale(): number;
    set dashScale(value: number);
    get linewidth(): number;
    set linewidth(value: number);
    get color(): Color;
    set color(value: Color);
    setUniforms(uniforms: Record<string, {
        value: any;
    }>): void;
    unsetUniforms(): void;
    setChunk(chunkName: string, chunk: string): void;
    unsetChunk(chunkName: string): void;
    clearChunks(): void;
    private _chunkReplacer;
    private _parseChunks;
}
export {};
//# sourceMappingURL=ThickLineMaterial.d.ts.map